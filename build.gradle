plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

/*이거 안해주면 lambda가 못찾음*/
tasks.named('bootJar') {
	enabled = false // bootJar는 비활성화, AWS Lambda용으로 다른 빌드 필요
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"  // Spring Cloud BOM 버전
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.cloud:spring-cloud-starter-function-web' // 함수 기반 spring
	implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws:4.1.1'  // AWS Lambda 어댑터
	implementation 'software.amazon.awssdk:lambda:2.25.27'  // AWS SDK v2 Lambda
	 implementation 'software.amazon.awssdk:s3:2.20.0'  // 필요에 따라 추가적인 AWS 서비스 SDK 추가 가능
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'  // Lambda core
	implementation 'com.amazonaws:aws-lambda-java-events:3.12.0'  // Lambda 이벤트
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'	// JSON 처리
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}


//task createLambdaJar(type: Jar) {
//	archiveBaseName = 'directsend-lambda'
//	from sourceSets.main.output
//	from configurations.runtimeClasspath // 의존성 파일을 JAR에 포함
//	manifest {
//		attributes 'Main-Class': 'com.api.directsend.request.handler.DirectSendHandler' // Lambda 핸들러 클래스 지정
//	}
//}